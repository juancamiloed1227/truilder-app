{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-052b1b82\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"node\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"NodeTemplate\"], {\n    onClick: $setup.addNode,\n    title: \"Number\",\n    firstColor: \"5100ff\",\n    secondColor: \"3a00b6\"\n  }, {\n    content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n      onChange: $setup.updateData,\n      class: \"variable-name\",\n      type: \"text\",\n      placeholder: \"Variable name\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name = $event)\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $setup.name]]), _withDirectives(_createElementVNode(\"input\", {\n      onChange: $setup.updateData,\n      class: \"number\",\n      type: \"number\",\n      placeholder: \"0\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.number = $event)\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $setup.number]])])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;EAGiBA,KAAK,EAAC;;;uBAFnBC,aAOeC,sBAPf,EAOe;IAPAC,OAAK,EAAED,cAOP;IAPgBE,KAAK,EAAC,QAOtB;IAP+BC,UAAU,EAAC,QAO1C;IAPmDC,WAAW,EAAC;EAO/D,CAPf;IACeC,OAAO,WACd,MAGM,CAHNC,oBAGM,KAHN,cAGM,iBAFFA,oBAA0G,OAA1G,EAA0G;MAAlGC,QAAM,EAAEP,iBAA0F;MAA9EF,KAAK,EAAC,eAAwE;MAAxDU,IAAI,EAAC,MAAmD;MAA5CC,WAAW,EAAC,eAAgC;iEAAPT,cAAIU;IAAG,CAA1G;;IAAA,kBAAmGV,cAEjG,kBADFM,oBAA2F,OAA3F,EAA2F;MAAnFC,QAAM,EAAEP,iBAA2E;MAA/DF,KAAK,EAAC,QAAyD;MAAhDU,IAAI,EAAC,QAA2C;MAAlCC,WAAW,EAAC,GAAsB;iEAATT,gBAAMU;IAAG,CAA3F;;IAAA,kBAAkFV,gBAChF,CAHN,CAGM,CAJQ;;;;GADtB","names":["class","_createBlock","$setup","onClick","title","firstColor","secondColor","content","_createElementVNode","onChange","type","placeholder","$event"],"sourceRoot":"","sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeNumber.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Number\" firstColor='5100ff' secondColor=\"3a00b6\">\n        <template #content>\n            <div class=\"node\">\n                <input @change=\"updateData\" class=\"variable-name\" type=\"text\" placeholder=\"Variable name\" v-model=\"name\"/>\n                <input @change=\"updateData\" class=\"number\" type=\"number\" placeholder=\"0\" v-model=\"number\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, ref, inject} from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst editor = ref({});\n\nconst values = {\n    'name': 'number',\n    'inputs': 0,\n    'outputs': 1,\n    'node': 'nodeNumber'\n}\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => {\n    emit('addNode', values);\n    const data = editor.value.drawflow.drawflow.Home.data;\n    nodeId = data[Object.keys(data)[Object.keys(data).length - 1]].id;\n}\n\nconst name = ref();\nconst number = ref();\n\nconst updateData = () => {\n    console.log('Cambio');\n    //data = `const ${name} = ${number};`;\n    //editor.value.updateNodeDataFromId(nodeId, data);\n}\n</script>\n\n<style scoped>\n.number, .variable-name{\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\n</style>"]},"metadata":{},"sourceType":"module"}