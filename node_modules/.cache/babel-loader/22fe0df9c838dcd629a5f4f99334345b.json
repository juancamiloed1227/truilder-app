{"ast":null,"code":"import { onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeBlock',\n  props: {\n    editor: {\n      type: Object\n    }\n  },\n  emits: [\"addNode\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const values = {\n      'name': 'block',\n      'inputs': 1,\n      'outputs': 1,\n      'node': 'nodeBlock'\n    };\n    let node = ref(null);\n    let id = ref(0);\n\n    const addNode = () => emit('addNode', values);\n\n    const addOutput = () => props.editor.addNodeOutput(id);\n\n    const removeOutput = () => {\n      const node = props.editor.getNodeFromId(id);\n      const keys = Object.keys(node.outputs);\n      props.editor.removeNodeOutput(id, keys[keys.length - 1]);\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n      props.editor.on('connectionCreated', connection => connectionCreated(connection));\n    });\n\n    const connectionCreated = connection => {\n      if (connection.output_id == id) {\n        const input_node = props.editor.getNodeFromId(connection.input_id);\n        input_node.class == 'add' ? console.log(Object.keys(input_node.outputs)) : {};\n        const input_class = connection.input_class;\n        const obj = { ...props.editor.getNodeFromId(connection.output_id).data\n        };\n        obj[input_class] = props.editor.getNodeFromId(connection.input_id).data.python;\n        props.editor.updateNodeDataFromId(connection.output_id, obj);\n      }\n    };\n\n    const __returned__ = {\n      values,\n      props,\n      node,\n      id,\n      emit,\n      addNode,\n      addOutput,\n      removeOutput,\n      connectionCreated,\n      onMounted,\n      ref,\n      nextTick,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAYA,SAAmCA,SAAnC,EAA8CC,GAA9C,EAAmDC,QAAnD,QAAmE,KAAnE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAG;MACX,QAAQ,OADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;IAaA,IAAIC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAd;IACA,IAAIK,EAAE,GAAGL,GAAG,CAAC,CAAD,CAAZ;;IAGA,MAAMM,OAAO,GAAG,MAAMC,IAAI,CAAC,SAAD,EAAYJ,MAAZ,CAA1B;;IAEA,MAAMK,SAAS,GAAG,MAAMC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BN,EAA3B,CAAxB;;IACA,MAAMO,YAAY,GAAG,MAAM;MACvB,MAAMR,IAAI,GAAGK,KAAK,CAACC,MAAN,CAAaG,aAAb,CAA2BR,EAA3B,CAAb;MACA,MAAMS,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYV,IAAI,CAACY,OAAjB,CAAb;MACAP,KAAK,CAACC,MAAN,CAAaO,gBAAb,CAA8BZ,EAA9B,EAAkCS,IAAI,CAACA,IAAI,CAACI,MAAL,GAAY,CAAb,CAAtC;IACH,CAJD;;IAMAnB,SAAS,CAAC,YAAY;MAClB,MAAME,QAAQ,EAAd;MACAI,EAAE,GAAGD,IAAI,CAACe,KAAL,CAAWC,aAAX,CAAyBA,aAAzB,CAAuCA,aAAvC,CAAqDf,EAArD,CAAwDgB,KAAxD,CAA8D,GAA9D,EAAmE,CAAnE,CAAL;MACAZ,KAAK,CAACC,MAAN,CAAaY,EAAb,CAAgB,mBAAhB,EAAqCC,UAAU,IAAIC,iBAAiB,CAACD,UAAD,CAApE;IACH,CAJQ,CAAT;;IAMA,MAAMC,iBAAiB,GAAID,UAAD,IAAgB;MACtC,IAAGA,UAAU,CAACE,SAAX,IAAwBpB,EAA3B,EAA8B;QAC1B,MAAMqB,UAAU,GAAGjB,KAAK,CAACC,MAAN,CAAaG,aAAb,CAA2BU,UAAU,CAACI,QAAtC,CAAnB;QAEAD,UAAU,CAACE,KAAX,IAAoB,KAApB,GAA4BC,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACD,IAAP,CAAYY,UAAU,CAACV,OAAvB,CAAZ,CAA5B,GAA2E,EAA3E;QAEA,MAAMe,WAAW,GAAGR,UAAU,CAACQ,WAA/B;QACA,MAAMC,GAAG,GAAG,EAAC,GAAGvB,KAAK,CAACC,MAAN,CAAaG,aAAb,CAA2BU,UAAU,CAACE,SAAtC,EAAiDQ;QAArD,CAAZ;QACAD,GAAG,CAACD,WAAD,CAAH,GAAmBtB,KAAK,CAACC,MAAN,CAAaG,aAAb,CAA2BU,UAAU,CAACI,QAAtC,EAAgDM,IAAhD,CAAqDC,MAAxE;QACAzB,KAAK,CAACC,MAAN,CAAayB,oBAAb,CAAkCZ,UAAU,CAACE,SAA7C,EAAwDO,GAAxD;MACH;IACJ,CAXD","names":["onMounted","ref","nextTick","NodeTemplate","values","node","id","addNode","emit","addOutput","props","editor","addNodeOutput","removeOutput","getNodeFromId","keys","Object","outputs","removeNodeOutput","length","value","parentElement","split","on","connection","connectionCreated","output_id","input_node","input_id","class","console","log","input_class","obj","data","python","updateNodeDataFromId"],"sources":["/Users/juancamiloespinosa/Desktop/truilder/src/components/Board/Nodes/NodeBlock.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Block of code\" firstColor='e0d74c' secondColor=\"ffef00\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <button @click=\"addOutput\">Add step</button>\n                <button @click=\"removeOutput\">Remove step</button>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'block',\n    'inputs': 1,\n    'outputs': 1,\n    'node': 'nodeBlock'\n}\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n\nconst addOutput = () => props.editor.addNodeOutput(id)\nconst removeOutput = () => {\n    const node = props.editor.getNodeFromId(id)\n    const keys = Object.keys(node.outputs);\n    props.editor.removeNodeOutput(id, keys[keys.length-1])\n}\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n    props.editor.on('connectionCreated', connection => connectionCreated(connection))\n});\n\nconst connectionCreated = (connection) => {\n    if(connection.output_id == id){\n        const input_node = props.editor.getNodeFromId(connection.input_id)\n        \n        input_node.class == 'add' ? console.log(Object.keys(input_node.outputs)) : {}\n\n        const input_class = connection.input_class\n        const obj = {...props.editor.getNodeFromId(connection.output_id).data}\n        obj[input_class] = props.editor.getNodeFromId(connection.input_id).data.python\n        props.editor.updateNodeDataFromId(connection.output_id, obj)\n    }\n} \n</script>\n\n<style scoped>\n.variable-name, .number {\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\np {\n    padding-left: 4px;\n    color: white;\n}\nbutton {\n    width: 100%;\n    border: none;\n    background: white;\n    padding: 5px 3px 5px 3px;\n    margin-bottom: 5px;\n    border-radius: 10px;\n    color: #222222;\n}\n</style>"]},"metadata":{},"sourceType":"module"}