{"ast":null,"code":"import { onMounted, nextTick, ref } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeNumber',\n  props: {\n    editor: {\n      type: Object\n    }\n  },\n  emits: [\"addNode\", \"updateData\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    let node = ref(null);\n    let id = ref(0);\n    const variableName = ref();\n    const number = ref();\n    const values = {\n      'name': 'number',\n      'inputs': 0,\n      'outputs': 1,\n      'node': 'nodeNumber'\n    };\n\n    const addNode = () => {\n      emit('addNode', values);\n    };\n\n    const updateData = () => {\n      props.editor.updateNodeDataFromId(id, {\n        'js': `var ${variableName.value} = ${number.value};`,\n        'output': `${variableName.value}`\n      });\n      const outputs = props.editor.getNodeFromId(id).outputs;\n\n      if (Object.keys(outputs).length > 0) {\n        let keys = Object.keys(outputs);\n\n        for (let i = 0; i < keys.length; i++) {\n          console.log(i);\n        }\n      }\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n    });\n    const __returned__ = {\n      props,\n      node,\n      id,\n      variableName,\n      number,\n      values,\n      emit,\n      addNode,\n      updateData,\n      onMounted,\n      nextTick,\n      ref,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAYA,SAAmCA,SAAnC,EAA8CC,QAA9C,EAAwDC,GAAxD,QAAmE,KAAnE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;;;;;;;IAQA,IAAIC,IAAI,GAAGF,GAAG,CAAC,IAAD,CAAd;IACA,IAAIG,EAAE,GAAGH,GAAG,CAAC,CAAD,CAAZ;IAEA,MAAMI,YAAY,GAAGJ,GAAG,EAAxB;IACA,MAAMK,MAAM,GAAGL,GAAG,EAAlB;IAEA,MAAMM,MAAM,GAAG;MACX,QAAQ,QADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;;IASA,MAAMC,OAAO,GAAG,MAAM;MAClBC,IAAI,CAAC,SAAD,EAAYF,MAAZ,CAAJ;IACH,CAFD;;IAIA,MAAMG,UAAU,GAAG,MAAM;MACrBC,KAAK,CAACC,MAAN,CAAaC,oBAAb,CAAkCT,EAAlC,EAAsC;QAClC,MAAO,OAAMC,YAAY,CAACS,KAAM,MAAKR,MAAM,CAACQ,KAAM,GADhB;QAElC,UAAW,GAAET,YAAY,CAACS,KAAM;MAFE,CAAtC;MAKA,MAAMC,OAAO,GAAGJ,KAAK,CAACC,MAAN,CAAaI,aAAb,CAA2BZ,EAA3B,EAA+BW,OAA/C;;MACA,IAAGE,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,MAArB,GAA8B,CAAjC,EAAmC;QAC/B,IAAID,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAX;;QACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACC,MAAzB,EAAiCC,CAAC,EAAlC,EAAqC;UACjCC,OAAO,CAACC,GAAR,CAAYF,CAAZ;QACH;MACJ;IACJ,CAbD;;IAeArB,SAAS,CAAC,YAAY;MAClB,MAAMC,QAAQ,EAAd;MACAI,EAAE,GAAGD,IAAI,CAACW,KAAL,CAAWS,aAAX,CAAyBA,aAAzB,CAAuCA,aAAvC,CAAqDnB,EAArD,CAAwDoB,KAAxD,CAA8D,GAA9D,EAAmE,CAAnE,CAAL;IACH,CAHQ,CAAT","names":["onMounted","nextTick","ref","NodeTemplate","node","id","variableName","number","values","addNode","emit","updateData","props","editor","updateNodeDataFromId","value","outputs","getNodeFromId","Object","keys","length","i","console","log","parentElement","split"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeNumber.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Number\" firstColor='5100ff' secondColor=\"3a00b6\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <input class=\"variable-name\" type=\"text\" placeholder=\"Variable name\" v-model=\"variableName\" @change=\"updateData\"/>\n                <input class=\"number\" type=\"number\" placeholder=\"0\" v-model=\"number\" @change=\"updateData\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, nextTick, ref } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst variableName = ref()\nconst number = ref()\n\nconst values = {\n    'name': 'number',\n    'inputs': 0,\n    'outputs': 1,\n    'node': 'nodeNumber'\n}\n\nconst emit = defineEmits([\"addNode\", \"updateData\"]);\n\nconst addNode = () => {\n    emit('addNode', values);\n}\n\nconst updateData = () => {\n    props.editor.updateNodeDataFromId(id, {\n        'js': `var ${variableName.value} = ${number.value};`,\n        'output': `${variableName.value}`\n    })\n\n    const outputs = props.editor.getNodeFromId(id).outputs;\n    if(Object.keys(outputs).length > 0){\n        let keys = Object.keys(outputs);\n        for (let i = 0; i < keys.length; i++){\n            console.log(i)\n        }\n    } \n}\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n});\n</script>\n\n<style scoped>\n.number, .variable-name{\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\n</style>"]},"metadata":{},"sourceType":"module"}