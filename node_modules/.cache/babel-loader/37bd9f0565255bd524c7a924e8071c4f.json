{"ast":null,"code":"import { createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"number\",\n  type: \"number\",\n  placeholder: \"0\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"NodeTemplate\"], {\n    title: \"Number\",\n    firstColor: \"5100ff\",\n    secondColor: \"3a00b6\"\n  }, {\n    content: _withCtx(() => [_createElementVNode(\"div\", {\n      onClick: $setup.addNode,\n      class: \"node\"\n    }, _hoisted_2)]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;gCAIgBA,oBAAqD,OAArD,EAAqD;EAA9CC,KAAK,EAAC,QAAwC;EAA/BC,IAAI,EAAC,QAA0B;EAAjBC,WAAW,EAAC;AAAK,CAArD;;AAAA;;oBAAAC;;uBAHZC,aAMeC,sBANf,EAMe;IANDC,KAAK,EAAC,QAML;IANcC,UAAU,EAAC,QAMzB;IANkCC,WAAW,EAAC;EAM9C,CANf;IACeC,OAAO,WACd,MAEM,CAFNV,oBAEM,KAFN,EAEM;MAFAW,OAAK,EAAEL,cAEP;MAFgBL,KAAK,EAAC;IAEtB,CAFN,aAEM,CAHQ;;;;GADtB","names":["_createElementVNode","class","type","placeholder","_hoisted_1","_createBlock","$setup","title","firstColor","secondColor","content","onClick"],"sourceRoot":"","sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeNumber.vue"],"sourcesContent":["<template>\n    <NodeTemplate title=\"Number\" firstColor='5100ff' secondColor=\"3a00b6\">\n        <template #content>\n            <div @click=\"addNode\" class=\"node\">\n                <input class=\"number\" type=\"number\" placeholder=\"0\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'number',\n    'inputs': 0,\n    'outputs': 1,\n    'node': 'nodeNumber'\n}\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n</script>\n\n<style>\n.number {\n    width: 100%;\n    padding-top: 3px;\n    padding-bottom: 3px;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\n</style>"]},"metadata":{},"sourceType":"module"}