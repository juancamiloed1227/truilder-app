{"ast":null,"code":"import Drawflow from 'drawflow';\nimport { onMounted, h, getCurrentInstance, render, inject } from 'vue';\nimport NodeNumber from './Nodes/NodeNumber';\nimport NodeAdd from './Nodes/NodeAdd.vue';\nimport NodePrint from './Nodes/NodePrint.vue';\nexport default {\n  __name: 'Index',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const editor = inject('editor');\n    const Vue = {\n      version: 3,\n      h,\n      render\n    };\n    const instance = getCurrentInstance();\n    onMounted(() => {\n      const id = document.getElementById(\"drawflow\");\n      editor.value = new Drawflow(id, Vue, instance.appContext.app._context);\n      editor.value.start();\n      editor.value.reroute = true;\n      editor.value.on('connectionCreated', connection => connectionCreated(connection.input_id, connection.output_id));\n      editor.value.registerNode('nodeNumber', NodeNumber, {\n        'editor': editor.value\n      }, {});\n      editor.value.registerNode('nodeAdd', NodeAdd, {\n        'editor': editor.value\n      }, {});\n      editor.value.registerNode('nodePrint', NodePrint, {\n        'editor': editor.value\n      }, {});\n      editor.value.addNode('number', 0, 1, 100, 100, 'number', {}, 'nodeNumber', 'vue');\n    });\n\n    const connectionCreated = (input_id, output_id) => {\n      inputNode = editor.value.getNodeFromId(input_id);\n      outputNode = editor.value.getNodeFromId(output_id);\n      console.log(inputNode);\n      console.log(outputNode);\n    };\n\n    const __returned__ = {\n      editor,\n      Vue,\n      instance,\n      connectionCreated,\n      Drawflow,\n      onMounted,\n      h,\n      getCurrentInstance,\n      render,\n      inject,\n      NodeNumber,\n      NodeAdd,\n      NodePrint\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAKA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,SAAT,EAAoBC,CAApB,EAAuBC,kBAAvB,EAA2CC,MAA3C,EAAmDC,MAAnD,QAAiE,KAAjE;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;;;;;;IAEA,MAAMC,MAAM,GAAGJ,MAAM,CAAC,QAAD,CAArB;IACA,MAAMK,GAAG,GAAG;MAAEC,OAAO,EAAE,CAAX;MAAcT,CAAd;MAAiBE;IAAjB,CAAZ;IACA,MAAMQ,QAAQ,GAAGT,kBAAkB,EAAnC;IAEAF,SAAS,CAAC,MAAM;MACZ,MAAMY,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAX;MACAN,MAAM,CAACO,KAAP,GAAe,IAAIhB,QAAJ,CAAaa,EAAb,EAAiBH,GAAjB,EAAsBE,QAAQ,CAACK,UAAT,CAAoBC,GAApB,CAAwBC,QAA9C,CAAf;MACAV,MAAM,CAACO,KAAP,CAAaI,KAAb;MAEAX,MAAM,CAACO,KAAP,CAAaK,OAAb,GAAuB,IAAvB;MAEAZ,MAAM,CAACO,KAAP,CAAaM,EAAb,CAAgB,mBAAhB,EAAqCC,UAAU,IAAIC,iBAAiB,CAACD,UAAU,CAACE,QAAZ,EAAsBF,UAAU,CAACG,SAAjC,CAApE;MAEAjB,MAAM,CAACO,KAAP,CAAaW,YAAb,CAA0B,YAA1B,EAAwCrB,UAAxC,EAAoD;QAAE,UAAUG,MAAM,CAACO;MAAnB,CAApD,EAAgF,EAAhF;MACAP,MAAM,CAACO,KAAP,CAAaW,YAAb,CAA0B,SAA1B,EAAqCpB,OAArC,EAA8C;QAAE,UAAUE,MAAM,CAACO;MAAnB,CAA9C,EAA0E,EAA1E;MACAP,MAAM,CAACO,KAAP,CAAaW,YAAb,CAA0B,WAA1B,EAAuCnB,SAAvC,EAAkD;QAAE,UAAUC,MAAM,CAACO;MAAnB,CAAlD,EAA8E,EAA9E;MAEAP,MAAM,CAACO,KAAP,CAAaY,OAAb,CAAqB,QAArB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,QAA/C,EAAyD,EAAzD,EAA6D,YAA7D,EAA2E,KAA3E;IACH,CAdQ,CAAT;;IAgBA,MAAMJ,iBAAiB,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;MACjDG,SAAS,GAAGpB,MAAM,CAACO,KAAP,CAAac,aAAb,CAA2BL,QAA3B,CAAZ;MACAM,UAAU,GAAGtB,MAAM,CAACO,KAAP,CAAac,aAAb,CAA2BJ,SAA3B,CAAb;MAEAM,OAAO,CAACC,GAAR,CAAYJ,SAAZ;MACAG,OAAO,CAACC,GAAR,CAAYF,UAAZ;IACD,CAND","names":["Drawflow","onMounted","h","getCurrentInstance","render","inject","NodeNumber","NodeAdd","NodePrint","editor","Vue","version","instance","id","document","getElementById","value","appContext","app","_context","start","reroute","on","connection","connectionCreated","input_id","output_id","registerNode","addNode","inputNode","getNodeFromId","outputNode","console","log"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Index.vue"],"sourcesContent":["<template>\n  <div id=\"drawflow\"></div>\n</template>\n\n<script setup>\nimport Drawflow from 'drawflow'\nimport { onMounted, h, getCurrentInstance, render, inject } from 'vue'\nimport NodeNumber from './Nodes/NodeNumber';\nimport NodeAdd from './Nodes/NodeAdd.vue'\nimport NodePrint from './Nodes/NodePrint.vue'\n\nconst editor = inject('editor');\nconst Vue = { version: 3, h, render };\nconst instance = getCurrentInstance();\n\nonMounted(() => {\n    const id = document.getElementById(\"drawflow\");\n    editor.value = new Drawflow(id, Vue, instance.appContext.app._context);\n    editor.value.start();\n\n    editor.value.reroute = true;\n\n    editor.value.on('connectionCreated', connection => connectionCreated(connection.input_id, connection.output_id))\n\n    editor.value.registerNode('nodeNumber', NodeNumber, { 'editor': editor.value }, {});\n    editor.value.registerNode('nodeAdd', NodeAdd, { 'editor': editor.value }, {});\n    editor.value.registerNode('nodePrint', NodePrint, { 'editor': editor.value }, {});\n\n    editor.value.addNode('number', 0, 1, 100, 100, 'number', {}, 'nodeNumber', 'vue');\n});\n\nconst connectionCreated = (input_id, output_id) => {\n  inputNode = editor.value.getNodeFromId(input_id)\n  outputNode = editor.value.getNodeFromId(output_id)\n\n  console.log(inputNode)\n  console.log(outputNode)\n}\n</script>\n\n<style scoped>\n#drawflow {\n  width: 100%;\n  height: 100%;\n  background-size: 20px 20px;\n  background-image: radial-gradient(#bebebe 1px, transparent 1px);\n}\n</style>"]},"metadata":{},"sourceType":"module"}