{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-df9a9790\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  ref: \"node\",\n  class: \"node\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"NodeTemplate\"], {\n    onClick: $setup.addNode,\n    title: \"Add\",\n    firstColor: \"e07558\",\n    secondColor: \"e04c24\"\n  }, {\n    content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"variable-name\",\n      type: \"text\",\n      placeholder: \"Variable name\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.variableName = $event),\n      onChange: $setup.updateData\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $setup.variableName]])], 512\n    /* NEED_PATCH */\n    )]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;EAGiBA,GAAG,EAAC;EAAOC,KAAK,EAAC;;;uBAF9BC,aAMeC,sBANf,EAMe;IANAC,OAAK,EAAED,cAMP;IANgBE,KAAK,EAAC,KAMtB;IAN4BC,UAAU,EAAC,QAMvC;IANgDC,WAAW,EAAC;EAM5D,CANf;IACeC,OAAO,WACd,MAEM,CAFNC,oBAEM,KAFN,cAEM,iBADFA,oBAAkH,OAAlH,EAAkH;MAA3GR,KAAK,EAAC,eAAqG;MAArFS,IAAI,EAAC,MAAgF;MAAzEC,WAAW,EAAC,eAA6D;iEAApCR,sBAAYS,OAAwB;MAArBC,QAAM,EAAEV;IAAa,CAAlH;;IAAA,kBAA8EA,sBAC5E,CAFN;;IAAA,CAEM,CAHQ;;;;GADtB","names":["ref","class","_createBlock","$setup","onClick","title","firstColor","secondColor","content","_createElementVNode","type","placeholder","$event","onChange"],"sourceRoot":"","sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeAdd.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Add\" firstColor='e07558' secondColor=\"e04c24\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <input class=\"variable-name\" type=\"text\" placeholder=\"Variable name\" v-model=\"variableName\" @change=\"updateData\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'add',\n    'inputs': 2,\n    'outputs': 1,\n    'node': 'nodeAdd'\n}\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst variableName = ref();\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n\nconst updateData = () => {\n    const connections = props.editor.getNodeFromId(id).inputs\n    \n    const input1 = props.editor.getNodeFromId(parseInt(connections.input_1.connections[0].node), 10).data.output;\n    const input2 = props.editor.getNodeFromId(parseInt(connections.input_2.connections[0].node), 10).data.output;\n\n    props.editor.updateNodeDataFromId(id, {\n        'js': `var ${variableName.value} = ${input1} + ${input2};`,\n        'output': `${variableName.value}'`\n    })\n}\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n    props.editor.on('connectionCreated', connection => console.log(connection))\n});\n</script>\n\n<style scoped>\n.variable-name, .number {\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\np {\n    padding-left: 4px;\n    color: white;\n}\n</style>"]},"metadata":{},"sourceType":"module"}