{"ast":null,"code":"import { onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeIf',\n  props: {\n    editor: {\n      type: Object\n    }\n  },\n  emits: [\"addNode\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const values = {\n      'name': 'if',\n      'inputs': 1,\n      'outputs': 2,\n      'node': 'nodeIf'\n    };\n    let node = ref(null);\n    let id = ref(0);\n    const variableName = ref();\n    const condition = ref(\"equal\");\n    const number = ref(0);\n\n    const addNode = () => emit('addNode', values);\n\n    const updateData = () => {\n      const obj = { ...props.editor.getNodeFromId(id).data\n      };\n      obj['output'] = variableName.value;\n      obj['selection'] = condition.value;\n      number.value != undefined ? obj['number'] = number.value : {};\n      props.editor.updateNodeDataFromId(id, obj);\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n      const data = props.editor.getNodeFromId(id).data;\n      data.selection != undefined ? condition.value = data.selection : {};\n      data.number != undefined ? number.value = data.number : {};\n      props.editor.on('connectionCreated', connection => connectionCreated(connection));\n    });\n\n    const connectionCreated = connection => {\n      if (connection.input_id == id) {\n        const obj = { ...props.editor.getNodeFromId(id).data\n        };\n        obj['input_1'] = props.editor.getNodeFromId(connection.output_id).data.output;\n        obj['condition'] = condition.value == 'equal' ? `if ${obj.input_1} == ${number.value}:` : condition.value == 'greater' ? `if ${obj.input_1} > ${number.value}:` : `if ${obj.input_1} < ${number.value}:`;\n        obj.yes_path != undefined && obj.no_path != undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\nelse:\\n   ${obj.no_path}` : obj.yes_path != undefined && obj.no_path == undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\n` : {};\n        props.editor.updateNodeDataFromId(id, obj);\n      } else if (connection.output_id == id) {\n        const obj = { ...props.editor.getNodeFromId(id).data\n        };\n        connection.output_class == 'output_1' ? obj['yes_path'] = props.editor.getNodeFromId(connection.input_id).data.python : obj['no_path'] = props.editor.getNodeFromId(connection.input_id).data.python;\n        obj.yes_path != undefined && obj.no_path != undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\nelse:\\n   ${obj.no_path}` : obj.yes_path != undefined && obj.no_path == undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\n` : {};\n        props.editor.updateNodeDataFromId(id, obj);\n      }\n    };\n\n    const __returned__ = {\n      values,\n      props,\n      node,\n      id,\n      variableName,\n      condition,\n      number,\n      emit,\n      addNode,\n      updateData,\n      connectionCreated,\n      onMounted,\n      ref,\n      nextTick,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAgBA,SAAmCA,SAAnC,EAA8CC,GAA9C,EAAmDC,QAAnD,QAAmE,KAAnE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAG;MACX,QAAQ,IADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;IAaA,IAAIC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAd;IACA,IAAIK,EAAE,GAAGL,GAAG,CAAC,CAAD,CAAZ;IAEA,MAAMM,YAAY,GAAGN,GAAG,EAAxB;IAEA,MAAMO,SAAS,GAAGP,GAAG,CAAC,OAAD,CAArB;IACA,MAAMQ,MAAM,GAAGR,GAAG,CAAC,CAAD,CAAlB;;IAGA,MAAMS,OAAO,GAAG,MAAMC,IAAI,CAAC,SAAD,EAAYP,MAAZ,CAA1B;;IAEA,MAAMQ,UAAU,GAAG,MAAM;MACrB,MAAMC,GAAG,GAAG,EAAC,GAAGC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BV,EAA3B,EAA+BW;MAAnC,CAAZ;MACAJ,GAAG,CAAC,QAAD,CAAH,GAAgBN,YAAY,CAACW,KAA7B;MAEAL,GAAG,CAAC,WAAD,CAAH,GAAmBL,SAAS,CAACU,KAA7B;MACAT,MAAM,CAACS,KAAP,IAAgBC,SAAhB,GAA4BN,GAAG,CAAC,QAAD,CAAH,GAAgBJ,MAAM,CAACS,KAAnD,GAA2D,EAA3D;MAEAJ,KAAK,CAACC,MAAN,CAAaK,oBAAb,CAAkCd,EAAlC,EAAsCO,GAAtC;IACH,CARD;;IAUAb,SAAS,CAAC,YAAY;MAClB,MAAME,QAAQ,EAAd;MACAI,EAAE,GAAGD,IAAI,CAACa,KAAL,CAAWG,aAAX,CAAyBA,aAAzB,CAAuCA,aAAvC,CAAqDf,EAArD,CAAwDgB,KAAxD,CAA8D,GAA9D,EAAmE,CAAnE,CAAL;MAEA,MAAML,IAAI,GAAGH,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BV,EAA3B,EAA+BW,IAA5C;MACAA,IAAI,CAACM,SAAL,IAAkBJ,SAAlB,GAA8BX,SAAS,CAACU,KAAV,GAAkBD,IAAI,CAACM,SAArD,GAAiE,EAAjE;MACAN,IAAI,CAACR,MAAL,IAAeU,SAAf,GAA2BV,MAAM,CAACS,KAAP,GAAeD,IAAI,CAACR,MAA/C,GAAwD,EAAxD;MAEAK,KAAK,CAACC,MAAN,CAAaS,EAAb,CAAgB,mBAAhB,EAAqCC,UAAU,IAAIC,iBAAiB,CAACD,UAAD,CAApE;IACH,CATQ,CAAT;;IAWA,MAAMC,iBAAiB,GAAID,UAAD,IAAgB;MACtC,IAAGA,UAAU,CAACE,QAAX,IAAuBrB,EAA1B,EAA6B;QACzB,MAAMO,GAAG,GAAG,EAAC,GAAGC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BV,EAA3B,EAA+BW;QAAnC,CAAZ;QACAJ,GAAG,CAAC,SAAD,CAAH,GAAiBC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BS,UAAU,CAACG,SAAtC,EAAiDX,IAAjD,CAAsDY,MAAvE;QACAhB,GAAG,CAAC,WAAD,CAAH,GAAmBL,SAAS,CAACU,KAAV,IAAmB,OAAnB,GAA8B,MAAKL,GAAG,CAACiB,OAAQ,OAAMrB,MAAM,CAACS,KAAM,GAAlE,GAAuEV,SAAS,CAACU,KAAV,IAAmB,SAAnB,GAAgC,MAAKL,GAAG,CAACiB,OAAQ,MAAKrB,MAAM,CAACS,KAAM,GAAnE,GAAyE,MAAKL,GAAG,CAACiB,OAAQ,MAAKrB,MAAM,CAACS,KAAM,GAAtM;QACAL,GAAG,CAACkB,QAAJ,IAAgBZ,SAAhB,IAA6BN,GAAG,CAACmB,OAAJ,IAAeb,SAA5C,GAAwDN,GAAG,CAAC,QAAD,CAAH,GAAiB,GAAEA,GAAG,CAACL,SAAU,QAAOK,GAAG,CAACkB,QAAS,eAAclB,GAAG,CAACmB,OAAQ,EAAvI,GAA2InB,GAAG,CAACkB,QAAJ,IAAgBZ,SAAhB,IAA6BN,GAAG,CAACmB,OAAJ,IAAeb,SAA5C,GAAwDN,GAAG,CAAC,QAAD,CAAH,GAAiB,GAAEA,GAAG,CAACL,SAAU,QAAOK,GAAG,CAACkB,QAAS,IAA7G,GAAmH,EAA9P;QACAjB,KAAK,CAACC,MAAN,CAAaK,oBAAb,CAAkCd,EAAlC,EAAsCO,GAAtC;MACH,CAND,MAMM,IAAGY,UAAU,CAACG,SAAX,IAAwBtB,EAA3B,EAA8B;QAChC,MAAMO,GAAG,GAAG,EAAC,GAAGC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BV,EAA3B,EAA+BW;QAAnC,CAAZ;QACAQ,UAAU,CAACQ,YAAX,IAA2B,UAA3B,GAAwCpB,GAAG,CAAC,UAAD,CAAH,GAAkBC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BS,UAAU,CAACE,QAAtC,EAAgDV,IAAhD,CAAqDiB,MAA/G,GAAwHrB,GAAG,CAAC,SAAD,CAAH,GAAiBC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BS,UAAU,CAACE,QAAtC,EAAgDV,IAAhD,CAAqDiB,MAA9L;QACArB,GAAG,CAACkB,QAAJ,IAAgBZ,SAAhB,IAA6BN,GAAG,CAACmB,OAAJ,IAAeb,SAA5C,GAAwDN,GAAG,CAAC,QAAD,CAAH,GAAiB,GAAEA,GAAG,CAACL,SAAU,QAAOK,GAAG,CAACkB,QAAS,eAAclB,GAAG,CAACmB,OAAQ,EAAvI,GAA2InB,GAAG,CAACkB,QAAJ,IAAgBZ,SAAhB,IAA6BN,GAAG,CAACmB,OAAJ,IAAeb,SAA5C,GAAwDN,GAAG,CAAC,QAAD,CAAH,GAAiB,GAAEA,GAAG,CAACL,SAAU,QAAOK,GAAG,CAACkB,QAAS,IAA7G,GAAmH,EAA9P;QACAjB,KAAK,CAACC,MAAN,CAAaK,oBAAb,CAAkCd,EAAlC,EAAsCO,GAAtC;MACH;IAEJ,CAdD","names":["onMounted","ref","nextTick","NodeTemplate","values","node","id","variableName","condition","number","addNode","emit","updateData","obj","props","editor","getNodeFromId","data","value","undefined","updateNodeDataFromId","parentElement","split","selection","on","connection","connectionCreated","input_id","output_id","output","input_1","yes_path","no_path","output_class","python"],"sources":["/Users/juancamiloespinosa/Desktop/truilder-app/src/components/Board/Nodes/NodeIf.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"If\" firstColor='e0d74c' secondColor=\"ffef00\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <select @change=\"updateData\" v-model=\"condition\">\n                    <option value=\"equal\">Equal to</option>\n                    <option value=\"greater\">Greater than</option>\n                    <option value=\"smaller\">Smaller than</option>\n                </select>\n                <input @change=\"updateData\" type=\"number\" v-model=\"number\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'if',\n    'inputs': 1,\n    'outputs': 2,\n    'node': 'nodeIf'\n}\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst variableName = ref();\n\nconst condition = ref(\"equal\")\nconst number = ref(0)\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n\nconst updateData = () => {\n    const obj = {...props.editor.getNodeFromId(id).data};\n    obj['output'] = variableName.value;\n    \n    obj['selection'] = condition.value\n    number.value != undefined ? obj['number'] = number.value : {}\n    \n    props.editor.updateNodeDataFromId(id, obj)\n}\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n\n    const data = props.editor.getNodeFromId(id).data\n    data.selection != undefined ? condition.value = data.selection : {}\n    data.number != undefined ? number.value = data.number : {}\n\n    props.editor.on('connectionCreated', connection => connectionCreated(connection))\n});\n\nconst connectionCreated = (connection) => {\n    if(connection.input_id == id){\n        const obj = {...props.editor.getNodeFromId(id).data}\n        obj['input_1'] = props.editor.getNodeFromId(connection.output_id).data.output\n        obj['condition'] = condition.value == 'equal' ? `if ${obj.input_1} == ${number.value}:` : condition.value == 'greater' ? `if ${obj.input_1} > ${number.value}:` : `if ${obj.input_1} < ${number.value}:`\n        obj.yes_path != undefined && obj.no_path != undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\nelse:\\n   ${obj.no_path}` : obj.yes_path != undefined && obj.no_path == undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\n` : {}\n        props.editor.updateNodeDataFromId(id, obj)\n    }else if(connection.output_id == id){\n        const obj = {...props.editor.getNodeFromId(id).data}\n        connection.output_class == 'output_1' ? obj['yes_path'] = props.editor.getNodeFromId(connection.input_id).data.python : obj['no_path'] = props.editor.getNodeFromId(connection.input_id).data.python\n        obj.yes_path != undefined && obj.no_path != undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\nelse:\\n   ${obj.no_path}` : obj.yes_path != undefined && obj.no_path == undefined ? obj['python'] = `${obj.condition}\\n   ${obj.yes_path}\\n` : {}\n        props.editor.updateNodeDataFromId(id, obj)\n    }\n    \n}\n</script>\n\n<style scoped>\n.variable-name, .number {\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    column-gap: 5px;\n}\n.node:hover{\n    cursor: move;\n}\np {\n    padding-left: 4px;\n    color: white;\n}\ninput {\n    height: 30px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}