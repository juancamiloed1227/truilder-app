{"ast":null,"code":"import { ref, inject } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeNumber',\n  emits: [\"addNode\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const editor = inject('editor');\n    let nodeId = 0;\n    const values = {\n      'name': 'number',\n      'inputs': 0,\n      'outputs': 1,\n      'node': 'nodeNumber'\n    };\n\n    const addNode = () => {\n      emit('addNode', values);\n      const data = editor.value.drawflow.drawflow.Home.data;\n      nodeId = data[Object.keys(data)[Object.keys(data).length - 1]].id;\n    };\n\n    const name = ref();\n    const number = ref();\n\n    const updateData = () => {\n      data = `const ${name} = ${number};`;\n      editor.value.updateNodeDataFromId(nodeId, data);\n    };\n\n    const __returned__ = {\n      editor,\n      nodeId,\n      values,\n      emit,\n      addNode,\n      name,\n      number,\n      updateData,\n      ref,\n      inject,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAYA,SAAsBA,GAAtB,EAA2BC,MAA3B,QAA0C,KAA1C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;IAEA,MAAMC,MAAM,GAAGF,MAAM,CAAC,QAAD,CAArB;IACA,IAAIG,MAAM,GAAG,CAAb;IAEA,MAAMC,MAAM,GAAG;MACX,QAAQ,QADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;;IAQA,MAAMC,OAAO,GAAG,MAAM;MAClBC,IAAI,CAAC,SAAD,EAAYF,MAAZ,CAAJ;MACA,MAAMG,IAAI,GAAGL,MAAM,CAACM,KAAP,CAAaC,QAAb,CAAsBA,QAAtB,CAA+BC,IAA/B,CAAoCH,IAAjD;MACAJ,MAAM,GAAGI,IAAI,CAACI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAAlB,GAA2B,CAA7C,CAAD,CAAJ,CAAsDC,EAA/D;IACH,CAJD;;IAMA,MAAMC,IAAI,GAAGhB,GAAG,EAAhB;IACA,MAAMiB,MAAM,GAAGjB,GAAG,EAAlB;;IAEA,MAAMkB,UAAU,GAAG,MAAM;MACrBV,IAAI,GAAI,SAAQQ,IAAK,MAAKC,MAAO,GAAjC;MACAd,MAAM,CAACM,KAAP,CAAaU,oBAAb,CAAkCf,MAAlC,EAA0CI,IAA1C;IACH,CAHD","names":["ref","inject","NodeTemplate","editor","nodeId","values","addNode","emit","data","value","drawflow","Home","Object","keys","length","id","name","number","updateData","updateNodeDataFromId"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeNumber.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Number\" firstColor='5100ff' secondColor=\"3a00b6\">\n        <template #content>\n            <div class=\"node\">\n                <input @change=\"updateData\" class=\"variable-name\" type=\"text\" placeholder=\"Variable name\" v-model=\"name\"/>\n                <input @change=\"updateData\" class=\"number\" type=\"number\" placeholder=\"0\" v-model=\"number\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, ref, inject  } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst editor = inject('editor');\nlet nodeId = 0;\n\nconst values = {\n    'name': 'number',\n    'inputs': 0,\n    'outputs': 1,\n    'node': 'nodeNumber'\n}\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => {\n    emit('addNode', values);\n    const data = editor.value.drawflow.drawflow.Home.data\n    nodeId = data[Object.keys(data)[Object.keys(data).length - 1]].id;\n}\n\nconst name = ref();\nconst number = ref();\n\nconst updateData = () => {\n    data = `const ${name} = ${number};`;\n    editor.value.updateNodeDataFromId(nodeId, data);\n}\n</script>\n\n<style scoped>\n.number, .variable-name{\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\n</style>"]},"metadata":{},"sourceType":"module"}