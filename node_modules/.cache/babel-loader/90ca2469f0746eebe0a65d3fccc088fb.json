{"ast":null,"code":"import { inject, ref } from 'vue';\nimport CodeVisualizer from './CodeVisualizer.vue';\nexport default {\n  __name: 'BoardController',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const editor = inject('editor');\n    let pythonCode = ref('');\n    const showCode = ref(false);\n\n    const play = () => {\n      const data = editor.value.drawflow.drawflow.Home.data;\n      const keys = Object.keys(data);\n      let nodesOrder = Object.keys(data).map(function (key) {\n        return data[key];\n      }).sort((a, b) => a.pos_x > b.pos_x ? 1 : b.pos_x > a.pos_x ? -1 : 0);\n      nodesOrder.forEach(element => {\n        element.data.output != undefined && !element.data.python.includes('undefined') ? pythonCode.value += `\\n${element.data.python}` : {};\n      });\n      showCode.value = true;\n      console.log(pythonCode.value);\n    };\n\n    const moreZoom = () => editor.value.zoom_in();\n\n    const lessZoom = () => editor.value.zoom_out();\n\n    const __returned__ = {\n      editor,\n      pythonCode,\n      showCode,\n      play,\n      moreZoom,\n      lessZoom,\n      inject,\n      ref,\n      CodeVisualizer\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAiBA,SAASA,MAAT,EAAiBC,GAAjB,QAA4B,KAA5B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;;;;;;IAEA,MAAMC,MAAM,GAAGH,MAAM,CAAC,QAAD,CAArB;IAEA,IAAII,UAAU,GAAGH,GAAG,CAAC,EAAD,CAApB;IACA,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,KAAD,CAApB;;IAGA,MAAMK,IAAI,GAAG,MAAM;MACf,MAAMC,IAAI,GAAIJ,MAAM,CAACK,KAAP,CAAaC,QAAb,CAAsBA,QAAtB,CAA+BC,IAA/B,CAAoCH,IAAlD;MACA,MAAMI,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,IAAZ,CAAb;MACA,IAAIM,UAAU,GAAGD,MAAM,CAACD,IAAP,CAAYJ,IAAZ,EAChBO,GADgB,CACZ,UAASC,GAAT,EAAc;QACf,OAAOR,IAAI,CAACQ,GAAD,CAAX;MACH,CAHgB,EAIhBC,IAJgB,CAIX,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA2BD,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAb,GAAsB,CAAC,CAAvB,GAA2B,CAJpD,CAAjB;MAMAN,UAAU,CAACO,OAAX,CAAmBC,OAAO,IAAI;QACzBA,OAAO,CAACd,IAAR,CAAae,MAAb,IAAuBC,SAAvB,IAAoC,CAACF,OAAO,CAACd,IAAR,CAAaiB,MAAb,CAAoBC,QAApB,CAA6B,WAA7B,CAAtC,GAAmFrB,UAAU,CAACI,KAAX,IAAqB,KAAIa,OAAO,CAACd,IAAR,CAAaiB,MAAO,EAAhI,GAAoI,EAApI;MACH,CAFD;MAIAnB,QAAQ,CAACG,KAAT,GAAiB,IAAjB;MACAkB,OAAO,CAACC,GAAR,CAAYvB,UAAU,CAACI,KAAvB;IACH,CAfD;;IAiBA,MAAMoB,QAAQ,GAAG,MAAMzB,MAAM,CAACK,KAAP,CAAaqB,OAAb,EAAvB;;IACA,MAAMC,QAAQ,GAAG,MAAM3B,MAAM,CAACK,KAAP,CAAauB,QAAb,EAAvB","names":["inject","ref","CodeVisualizer","editor","pythonCode","showCode","play","data","value","drawflow","Home","keys","Object","nodesOrder","map","key","sort","a","b","pos_x","forEach","element","output","undefined","python","includes","console","log","moreZoom","zoom_in","lessZoom","zoom_out"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/BoardController.vue"],"sourcesContent":["<template>\n    <CodeVisualizer @close=\"showCode = false\" v-show=\"showCode\" :pythonCode=\"pythonCode\"/>\n    <div class=\"container\">\n        <div class=\"zoom-container\">\n            <button class=\"button zoom\" @click=\"moreZoom\">+</button>\n            <button class=\"button zoom\" @click=\"lessZoom\">-</button>    \n        </div>\n        <div></div>\n        <div class=\"buttons-container\">\n            <button class=\"button export\">Export</button>\n            <button class=\"button import\">Import</button>\n            <button class=\"button play\" @click=\"play\">Play</button>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { inject, ref } from 'vue';\nimport CodeVisualizer from './CodeVisualizer.vue'\n\nconst editor = inject('editor')\n\nlet pythonCode = ref('');\nconst showCode = ref(false);\n\n\nconst play = () => {\n    const data =  editor.value.drawflow.drawflow.Home.data\n    const keys = Object.keys(data)\n    let nodesOrder = Object.keys(data)\n    .map(function(key) {\n        return data[key];\n    })\n    .sort((a, b) => (a.pos_x > b.pos_x) ? 1 : (b.pos_x > a.pos_x) ? -1 : 0);\n    \n    nodesOrder.forEach(element => {\n        (element.data.output != undefined && !element.data.python.includes('undefined')) ? pythonCode.value += `\\n${element.data.python}` : {} \n    });\n\n    showCode.value = true;\n    console.log(pythonCode.value)\n}\n\nconst moreZoom = () => editor.value.zoom_in()\nconst lessZoom = () => editor.value.zoom_out()\n</script>\n\n<style scoped>\nbutton {\n    font-size: 1rem;\n    height: 100%;\n    min-width: 40px;\n    border: none;\n    border-radius: 110px;\n    color: white;\n    font-family: 'Lato', sans-serif;\n    font-weight: 400;\n}\n.container {\n    padding: 8px;\n    width: 100%;\n    height: 10%;\n    border-bottom: 1px solid #8f8f8f;\n    display: grid;\n    grid-template-columns: 2fr 2fr 3fr;\n    column-gap: 10px;\n}\n.buttons-container {\n    text-align: right;\n    display: grid;\n    grid-template-columns: 1fr 1fr 2fr;\n    column-gap: 15px;\n}\n.play {\n    background-color: #52ff00;\n}\n.play:hover {\n    background-color: #42ce02;\n}\n.import {\n    background-color: #ff0000;\n}\n.import:hover {\n    background-color: #cb0000;\n}\n.export {\n    background-color: #4690ff\n}\n.export:hover {\n    background-color: #196deb\n}\n.zoom {\n    background-color: #5f5f5f;\n    margin-right: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}