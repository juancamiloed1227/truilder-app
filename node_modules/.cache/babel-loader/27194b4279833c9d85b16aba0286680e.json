{"ast":null,"code":"import { onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeAdd',\n  props: {\n    editor: {\n      type: Object\n    }\n  },\n  emits: [\"addNode\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const values = {\n      'name': 'add',\n      'inputs': 2,\n      'outputs': 1,\n      'node': 'nodeAdd'\n    };\n    let node = ref(null);\n    let id = ref(0);\n    const variableName = ref();\n\n    const addNode = () => emit('addNode', values);\n\n    onMounted(async () => {\n      await nextTick();\n      id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n      props.editor.on('connectionCreated', connection => connectionCreated(connection));\n    });\n\n    const connectionCreated = connection => {\n      connection.input_id === id ? updateData() : {};\n    };\n\n    const updateData = () => {\n      const obj = { ...props.editor.getNodeFromId(id).data\n      };\n      obj['output'] = variableName.value;\n      const input1 = obj['input_1'];\n      const input2 = obj['input_2'];\n      obj['python'] = `${variableName.value} = ${input1} + ${input2}`;\n      props.editor.updateNodeDataFromId(id, obj);\n    };\n\n    const __returned__ = {\n      values,\n      props,\n      node,\n      id,\n      variableName,\n      emit,\n      addNode,\n      connectionCreated,\n      updateData,\n      onMounted,\n      ref,\n      nextTick,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAWA,SAAmCA,SAAnC,EAA8CC,GAA9C,EAAmDC,QAAnD,QAAmE,KAAnE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAG;MACX,QAAQ,KADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;IAaA,IAAIC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAd;IACA,IAAIK,EAAE,GAAGL,GAAG,CAAC,CAAD,CAAZ;IAEA,MAAMM,YAAY,GAAGN,GAAG,EAAxB;;IAGA,MAAMO,OAAO,GAAG,MAAMC,IAAI,CAAC,SAAD,EAAYL,MAAZ,CAA1B;;IAEAJ,SAAS,CAAC,YAAY;MAClB,MAAME,QAAQ,EAAd;MACAI,EAAE,GAAGD,IAAI,CAACK,KAAL,CAAWC,aAAX,CAAyBA,aAAzB,CAAuCA,aAAvC,CAAqDL,EAArD,CAAwDM,KAAxD,CAA8D,GAA9D,EAAmE,CAAnE,CAAL;MACAC,KAAK,CAACC,MAAN,CAAaC,EAAb,CAAgB,mBAAhB,EAAqCC,UAAU,IAAIC,iBAAiB,CAACD,UAAD,CAApE;IACH,CAJQ,CAAT;;IAMA,MAAMC,iBAAiB,GAAGD,UAAU,IAAI;MACpCA,UAAU,CAACE,QAAX,KAAwBZ,EAAxB,GAA6Ba,UAAU,EAAvC,GAA4C,EAA5C;IACH,CAFD;;IAIA,MAAMA,UAAU,GAAG,MAAM;MACrB,MAAMC,GAAG,GAAG,EAAC,GAAGP,KAAK,CAACC,MAAN,CAAaO,aAAb,CAA2Bf,EAA3B,EAA+BgB;MAAnC,CAAZ;MACAF,GAAG,CAAC,QAAD,CAAH,GAAgBb,YAAY,CAACG,KAA7B;MAEA,MAAMa,MAAM,GAAGH,GAAG,CAAC,SAAD,CAAlB;MACA,MAAMI,MAAM,GAAGJ,GAAG,CAAC,SAAD,CAAlB;MACAA,GAAG,CAAC,QAAD,CAAH,GAAiB,GAAEb,YAAY,CAACG,KAAM,MAAKa,MAAO,MAAKC,MAAO,EAA9D;MACAX,KAAK,CAACC,MAAN,CAAaW,oBAAb,CAAkCnB,EAAlC,EAAsCc,GAAtC;IACH,CARD","names":["onMounted","ref","nextTick","NodeTemplate","values","node","id","variableName","addNode","emit","value","parentElement","split","props","editor","on","connection","connectionCreated","input_id","updateData","obj","getNodeFromId","data","input1","input2","updateNodeDataFromId"],"sources":["/Users/juancamiloespinosa/Desktop/truilder/src/components/Board/Nodes/NodeAdd.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Add\" firstColor='e07558' secondColor=\"e04c24\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <input class=\"variable-name\" type=\"text\" placeholder=\"Variable name\" v-model=\"variableName\" @change=\"updateData\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'add',\n    'inputs': 2,\n    'outputs': 1,\n    'node': 'nodeAdd'\n}\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst variableName = ref();\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n    props.editor.on('connectionCreated', connection => connectionCreated(connection))\n});\n\nconst connectionCreated = connection => {\n    connection.input_id === id ? updateData() : {}\n}\n\nconst updateData = () => {\n    const obj = {...props.editor.getNodeFromId(id).data};\n    obj['output'] = variableName.value;\n    \n    const input1 = obj['input_1']\n    const input2 = obj['input_2']\n    obj['python'] = `${variableName.value} = ${input1} + ${input2}`\n    props.editor.updateNodeDataFromId(id, obj)\n}\n</script>\n\n<style scoped>\n.variable-name, .number {\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\np {\n    padding-left: 4px;\n    color: white;\n}\n</style>"]},"metadata":{},"sourceType":"module"}