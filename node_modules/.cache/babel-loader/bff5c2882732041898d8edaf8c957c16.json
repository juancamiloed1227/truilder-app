{"ast":null,"code":"import { provide, inject, ref } from 'vue';\nimport NodeNumber from '../Board/Nodes/NodeNumber.vue';\nimport NodeAdd from '../Board/Nodes/NodeAdd.vue';\nimport NodePrint from '../Board/Nodes/NodePrint.vue';\nexport default {\n  __name: 'NodeList',\n  props: {\n    nodeType: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n\n    const randomInt = (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min);\n    };\n\n    const editor = ref(inject('editor'));\n\n    const addNodeToBoard = values => {\n      editor.value.addNode(values.name, values.inputs, values.outputs, randomInt(50, 800), randomInt(50, 800), values.name, {}, values.node, 'vue');\n    };\n\n    const __returned__ = {\n      props,\n      randomInt,\n      editor,\n      addNodeToBoard,\n      provide,\n      inject,\n      ref,\n      NodeNumber,\n      NodeAdd,\n      NodePrint\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAkBA,SAAsBA,OAAtB,EAA+BC,MAA/B,EAAuCC,GAAvC,QAAkD,KAAlD;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;;;;;;;;;;;;;;IASA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;MAC5BD,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;MACAC,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;MACA,OAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;IACH,CAJD;;IAMA,MAAMM,MAAM,GAAGX,GAAG,CAACD,MAAM,CAAC,QAAD,CAAP,CAAlB;;IAEA,MAAMa,cAAc,GAAIC,MAAD,IAAY;MAC/BF,MAAM,CAACG,KAAP,CAAaC,OAAb,CAAqBF,MAAM,CAACG,IAA5B,EAAkCH,MAAM,CAACI,MAAzC,EAAiDJ,MAAM,CAACK,OAAxD,EAAiEd,SAAS,CAAC,EAAD,EAAK,GAAL,CAA1E,EAAqFA,SAAS,CAAC,EAAD,EAAK,GAAL,CAA9F,EAAyGS,MAAM,CAACG,IAAhH,EAAsH,EAAtH,EAA0HH,MAAM,CAACM,IAAjI,EAAuI,KAAvI;IACH,CAFD","names":["provide","inject","ref","NodeNumber","NodeAdd","NodePrint","randomInt","min","max","Math","ceil","floor","random","editor","addNodeToBoard","values","value","addNode","name","inputs","outputs","node"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Sidebar/NodeList.vue"],"sourcesContent":["<template>\n    <div class=\"scroller\">\n        <div class=\"list\" v-if=\"nodeType == 'Variables'\">\n            <NodeNumber @addNode=\"addNodeToBoard\"/>\n        </div>\n        <div class=\"list\" v-else-if=\"nodeType == 'Math'\">\n            <NodeAdd @addNode=\"addNodeToBoard\"/>\n        </div>\n        <div class=\"list\" v-else-if=\"nodeType == 'Logic'\">\n            <h3>Logic</h3>\n        </div>\n        <div class=\"list\" v-else-if=\"nodeType == 'Methods'\">\n            <NodePrint @addNode=\"addNodeToBoard\"/>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { defineProps, provide, inject, ref } from 'vue';\nimport NodeNumber from '../Board/Nodes/NodeNumber.vue'\nimport NodeAdd from '../Board/Nodes/NodeAdd.vue';\nimport NodePrint from '../Board/Nodes/NodePrint.vue';\n\nconst props = defineProps({\n    nodeType: {\n        type: String,\n        required: true,\n    }\n})\n\nconst randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst editor = ref(inject('editor'));\n\nconst addNodeToBoard = (values) => {\n    editor.value.addNode(values.name, values.inputs, values.outputs, randomInt(50, 800), randomInt(50, 800), values.name, {}, values.node, 'vue');\n}\n</script>\n\n<style scoped>\n.scroller {\n    height: 77vh;\n    overflow-y: auto;\n}\n.list > * {\n    cursor: default;\n    margin-bottom: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}