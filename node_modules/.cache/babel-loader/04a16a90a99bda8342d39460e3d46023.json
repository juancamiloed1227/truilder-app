{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/images/close-icon.svg';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-bb036234\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"global-container\"\n};\nconst _hoisted_2 = {\n  class: \"flows-container\"\n};\nexport function render(_ctx, _cache) {\n  const _component_FlowSelector = _resolveComponent(\"FlowSelector\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.close && _ctx.close(...args))\n  }), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.props.databaseFlows.queryFlow, item => {\n    return _openBlock(), _createBlock(_component_FlowSelector, {\n      key: item.id,\n      title: item.title,\n      onClick: $event => _ctx.loadFlow(item.id, item.title, item.content)\n    }, null, 8\n    /* PROPS */\n    , [\"title\", \"onClick\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";OAEaA,gBAAoC;;;;;EADxCC,KAAK,EAAC;;;EAEFA,KAAK,EAAC;;;;;uBAFfC,oBAKM,KALN,cAKM,CAJFC,oBAA0D,KAA1D,EAA0D;IAArDC,GAAoC,EAApCJ,UAAqD;IAAfK,OAAK,yCAAEC,iCAAF;EAAU,CAA1D,CAIE,EAHFH,oBAEM,KAFN,cAEM,oBADFD,oBAAqJK,SAArJ,EAAqJ,IAArJ,EAAqJC,YAAxHF,WAAMG,aAAN,CAAoBC,SAAoG,EAAhIC,IAAqC,IAAjC;yBAAzBC,aAAqJC,uBAArJ,EAAqJ;MAAxFC,GAAG,EAAEH,IAAI,CAACI,EAA8E;MAAzEC,KAAK,EAAEL,IAAI,CAACK,KAA6D;MAArDX,OAAK,YAAEC,cAASK,IAAI,CAACI,EAAd,EAAkBJ,IAAI,CAACK,KAAvB,EAA8BL,IAAI,CAACM,OAAnC;IAA8C,CAArJ;;IAAA;GAAqJ,CAArJ;;EAAA,CACE,EAFN,CAGE,CALN","names":["_imports_0","class","_createElementBlock","_createElementVNode","src","onClick","_ctx","_Fragment","_renderList","databaseFlows","queryFlow","item","_createBlock","_component_FlowSelector","key","id","title","content"],"sourceRoot":"","sources":["/Users/juancamiloespinosa/Desktop/truilder-app/src/components/Board/AdminPanel/AdminPanel.vue"],"sourcesContent":["<template>\n    <div class=\"global-container\">\n        <img src=\"@/assets/images/close-icon.svg\" @click=\"close\"/>\n        <div class=\"flows-container\" >\n            <FlowSelector v-for=\"item in props.databaseFlows.queryFlow\" :key=\"item.id\" :title=\"item.title\" @click=\"loadFlow(item.id, item.title, item.content)\"/>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, inject } from 'vue';\nimport FlowSelector from './FlowSelector.vue'\n\nconst emit = defineEmits([\"close\"])\nconst editor = inject('editor')\n\nconst close = () => emit('close')\n\nconst props = defineProps({\n    databaseFlows: {\n        type: Object\n    }\n})\n\nconst loadFlow = (id, title, content) => {\n    let data = content\n    data = data.replaceAll('closeSquare', '}')\n    data = data.replaceAll('openSquare', '{')\n    data = JSON.parse(data)\n    \n    console.log(data))\n    emit('close')\n}\n</script>\n\n<style scoped>\n.global-container {\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n}\n.flows-container {\n    margin-top: 15px;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n    overflow-y: auto;\n}\n</style>"]},"metadata":{},"sourceType":"module"}