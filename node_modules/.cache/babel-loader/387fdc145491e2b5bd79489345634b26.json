{"ast":null,"code":"import Drawflow from 'drawflow';\nimport { onMounted, h, getCurrentInstance, render, inject } from 'vue';\nimport NodeNumber from './Nodes/NodeNumber';\nimport NodeAdd from './Nodes/NodeAdd.vue';\nimport NodePrint from './Nodes/NodePrint.vue';\nexport default {\n  __name: 'Index',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const editor = inject('editor');\n    const Vue = {\n      version: 3,\n      h,\n      render\n    };\n    const instance = getCurrentInstance();\n\n    const updateData = (input_id, output_id) => {\n      console.log(editor.value);\n    };\n\n    onMounted(() => {\n      const id = document.getElementById(\"drawflow\");\n      editor.value = new Drawflow(id, Vue, instance.appContext.app._context);\n      editor.value.start();\n      editor.value.on('connectionCreated', function (connection) {\n        console.log(connection);\n        const output = editor.value.getNodeFromId(connection.output_id).data.output;\n        output != undefined ? console.log(output) : console.log('No Output');\n      });\n      editor.value.reroute = true;\n      editor.value.registerNode('nodeNumber', NodeNumber, {\n        'editor': editor.value\n      }, {});\n      editor.value.registerNode('nodeAdd', NodeAdd, {\n        'editor': editor.value\n      }, {});\n      editor.value.registerNode('nodePrint', NodePrint, {\n        'editor': editor.value\n      }, {});\n      editor.value.addNode('number', 0, 1, 100, 100, 'number', {}, 'nodeNumber', 'vue');\n    });\n    const __returned__ = {\n      editor,\n      Vue,\n      instance,\n      updateData,\n      Drawflow,\n      onMounted,\n      h,\n      getCurrentInstance,\n      render,\n      inject,\n      NodeNumber,\n      NodeAdd,\n      NodePrint\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAKA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,SAAT,EAAoBC,CAApB,EAAuBC,kBAAvB,EAA2CC,MAA3C,EAAmDC,MAAnD,QAAiE,KAAjE;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;;;;;;IAEA,MAAMC,MAAM,GAAGJ,MAAM,CAAC,QAAD,CAArB;IACA,MAAMK,GAAG,GAAG;MAAEC,OAAO,EAAE,CAAX;MAAcT,CAAd;MAAiBE;IAAjB,CAAZ;IACA,MAAMQ,QAAQ,GAAGT,kBAAkB,EAAnC;;IAEA,MAAMU,UAAU,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;MAC1CC,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,KAAnB;IACD,CAFD;;IAIAjB,SAAS,CAAC,MAAM;MACZ,MAAMkB,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAX;MACAZ,MAAM,CAACS,KAAP,GAAe,IAAIlB,QAAJ,CAAamB,EAAb,EAAiBT,GAAjB,EAAsBE,QAAQ,CAACU,UAAT,CAAoBC,GAApB,CAAwBC,QAA9C,CAAf;MACAf,MAAM,CAACS,KAAP,CAAaO,KAAb;MAEAhB,MAAM,CAACS,KAAP,CAAaQ,EAAb,CAAgB,mBAAhB,EAAqC,UAASC,UAAT,EAAqB;QACxDX,OAAO,CAACC,GAAR,CAAYU,UAAZ;QACA,MAAMC,MAAM,GAAGnB,MAAM,CAACS,KAAP,CAAaW,aAAb,CAA2BF,UAAU,CAACZ,SAAtC,EAAiDe,IAAjD,CAAsDF,MAArE;QACAA,MAAM,IAAIG,SAAV,GAAsBf,OAAO,CAACC,GAAR,CAAYW,MAAZ,CAAtB,GAA4CZ,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA5C;MACD,CAJD;MAMAR,MAAM,CAACS,KAAP,CAAac,OAAb,GAAuB,IAAvB;MAEAvB,MAAM,CAACS,KAAP,CAAae,YAAb,CAA0B,YAA1B,EAAwC3B,UAAxC,EAAoD;QAAE,UAAUG,MAAM,CAACS;MAAnB,CAApD,EAAgF,EAAhF;MACAT,MAAM,CAACS,KAAP,CAAae,YAAb,CAA0B,SAA1B,EAAqC1B,OAArC,EAA8C;QAAE,UAAUE,MAAM,CAACS;MAAnB,CAA9C,EAA0E,EAA1E;MACAT,MAAM,CAACS,KAAP,CAAae,YAAb,CAA0B,WAA1B,EAAuCzB,SAAvC,EAAkD;QAAE,UAAUC,MAAM,CAACS;MAAnB,CAAlD,EAA8E,EAA9E;MAEAT,MAAM,CAACS,KAAP,CAAagB,OAAb,CAAqB,QAArB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,QAA/C,EAAyD,EAAzD,EAA6D,YAA7D,EAA2E,KAA3E;IACH,CAlBQ,CAAT","names":["Drawflow","onMounted","h","getCurrentInstance","render","inject","NodeNumber","NodeAdd","NodePrint","editor","Vue","version","instance","updateData","input_id","output_id","console","log","value","id","document","getElementById","appContext","app","_context","start","on","connection","output","getNodeFromId","data","undefined","reroute","registerNode","addNode"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Index.vue"],"sourcesContent":["<template>\n  <div id=\"drawflow\"></div>\n</template>\n\n<script setup>\nimport Drawflow from 'drawflow'\nimport { onMounted, h, getCurrentInstance, render, inject } from 'vue'\nimport NodeNumber from './Nodes/NodeNumber';\nimport NodeAdd from './Nodes/NodeAdd.vue'\nimport NodePrint from './Nodes/NodePrint.vue'\n\nconst editor = inject('editor');\nconst Vue = { version: 3, h, render };\nconst instance = getCurrentInstance();\n\nconst updateData = (input_id, output_id) => {\n  console.log(editor.value)\n}\n\nonMounted(() => {\n    const id = document.getElementById(\"drawflow\");\n    editor.value = new Drawflow(id, Vue, instance.appContext.app._context);\n    editor.value.start();\n\n    editor.value.on('connectionCreated', function(connection) {\n      console.log(connection);\n      const output = editor.value.getNodeFromId(connection.output_id).data.output\n      output != undefined ? console.log(output) : console.log('No Output')\n    })\n\n    editor.value.reroute = true;\n\n    editor.value.registerNode('nodeNumber', NodeNumber, { 'editor': editor.value }, {});\n    editor.value.registerNode('nodeAdd', NodeAdd, { 'editor': editor.value }, {});\n    editor.value.registerNode('nodePrint', NodePrint, { 'editor': editor.value }, {});\n\n    editor.value.addNode('number', 0, 1, 100, 100, 'number', {}, 'nodeNumber', 'vue');\n});\n</script>\n\n<style scoped>\n#drawflow {\n  width: 100%;\n  height: 100%;\n  background-size: 20px 20px;\n  background-image: radial-gradient(#bebebe 1px, transparent 1px);\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}