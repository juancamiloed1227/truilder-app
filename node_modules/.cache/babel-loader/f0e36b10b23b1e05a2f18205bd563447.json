{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Number\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"number\",\n  placeholder: \"0\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nexport function render(_ctx, _cache) {\n  const _component_NodeTemplate = _resolveComponent(\"NodeTemplate\");\n\n  return _openBlock(), _createBlock(_component_NodeTemplate, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.addNode && _ctx.addNode(...args)),\n      class: \"node\"\n    }, _hoisted_3)]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;gCAGYA,oBAAa,GAAb,EAAa,IAAb,EAAG,QAAH,EAAS;AAAA;AAAT;;gCACAA,oBAAsC,OAAtC,EAAsC;EAA/BC,IAAI,EAAC,QAA0B;EAAjBC,WAAW,EAAC;AAAK,CAAtC;;AAAA;;oBADAC,YACAC;;;;uBAHRC,aAKeC,uBALf,EAKe,IALf,EAKe;sBAJX,MAGM,CAHNN,oBAGM,KAHN,EAGM;MAHAO,OAAK,yCAAEC,qCAAF,CAGL;MAHgBC,KAAK,EAAC;IAGtB,CAHN,aAGM,EACK;;;;EAAA,CALf","names":["_createElementVNode","type","placeholder","_hoisted_1","_hoisted_2","_createBlock","_component_NodeTemplate","onClick","_ctx","class"],"sourceRoot":"","sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeNumber.vue"],"sourcesContent":["<template>\n    <NodeTemplate>\n        <div @click=\"addNode\" class=\"node\">\n            <p>Number</p>\n            <input type=\"number\" placeholder=\"0\"/>\n        </div>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\n\nconst values = {\n    'name': 'number',\n    'inputs': 0,\n    'outputs': 1,\n    'node': 'nodeNumber'\n}\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n</script>\n\n<style>\n.node {\n    box-sizing: border-box;\n    width: 150px;\n    height: 100px;\n    background: purple;\n}\n.node:hover{\n    cursor: move;\n}\n</style>"]},"metadata":{},"sourceType":"module"}