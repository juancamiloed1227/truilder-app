{"ast":null,"code":"import { inject, provide, ref } from 'vue';\nimport CodeVisualizer from './CodeVisualizer.vue';\nimport AdminPanel from './AdminPanel/AdminPanel.vue';\nexport default {\n  __name: 'BoardController',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const editor = inject('editor');\n    let pythonCode = ref('');\n    const showCode = ref(false);\n    const showAdminPanel = ref(false);\n    const databaseFlows = ref({\n      'title': 'title',\n      'id': 1\n    });\n    const flowId = ref();\n    const flowTitle = ref(`Flow #${Math.floor(Math.random() * 1000)}`);\n    provide('flowId', flowId.value);\n    provide('flowTitle', flowTitle.value);\n\n    const play = () => {\n      const data = editor.value.drawflow.drawflow.Home.data;\n      console.log(data);\n      const keys = Object.keys(data);\n      let nodesOrder = Object.keys(data).map(function (key) {\n        return data[key];\n      }).sort((a, b) => a.pos_x > b.pos_x ? 1 : b.pos_x > a.pos_x ? -1 : 0);\n      pythonCode.value = '';\n      nodesOrder.forEach(element => {\n        element.data['python'] && !element.data.python.includes('undefined') && element.data.convertible ? pythonCode.value += `${element.data.python}\\n` : {};\n      });\n      showCode.value = true;\n      console.log(pythonCode.value);\n    };\n\n    const saveFlow = () => {\n      let data = JSON.stringify(editor.value.export());\n      data = data.replaceAll('{', 'openSquare');\n      data = data.replaceAll('}', 'closeSquare');\n      data = data.replaceAll('\"', 'quote');\n      let _datos = {\n        title: flowTitle.value,\n        content: data\n      };\n\n      if (flowId.value != undefined) {\n        fetch(`http://localhost:3000/flows/${flowId.value}`, {\n          method: \"PUT\",\n          mode: 'cors',\n          body: JSON.stringify(_datos)\n        }).then(response => response.json()).then(json => {\n          console.log(json);\n        });\n      } else {\n        fetch('http://localhost:3000/flows', {\n          method: \"POST\",\n          mode: 'cors',\n          body: JSON.stringify(_datos)\n        }).then(response => response.json()).then(json => {\n          console.log(json);\n        });\n      }\n    };\n\n    const loadFlow = () => {\n      fetch('http://localhost:3000/flows', {\n        method: \"GET\",\n        mode: 'cors'\n      }).then(response => response.json()).then(json => {\n        databaseFlows.value = json;\n      });\n      showAdminPanel.value = true;\n    };\n\n    const moreZoom = () => editor.value.zoom_in();\n\n    const lessZoom = () => editor.value.zoom_out();\n\n    const __returned__ = {\n      editor,\n      pythonCode,\n      showCode,\n      showAdminPanel,\n      databaseFlows,\n      flowId,\n      flowTitle,\n      play,\n      saveFlow,\n      loadFlow,\n      moreZoom,\n      lessZoom,\n      inject,\n      provide,\n      ref,\n      CodeVisualizer,\n      AdminPanel\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["inject","provide","ref","CodeVisualizer","AdminPanel","editor","pythonCode","showCode","showAdminPanel","databaseFlows","flowId","flowTitle","Math","floor","random","value","play","data","drawflow","Home","console","log","keys","Object","nodesOrder","map","key","sort","a","b","pos_x","forEach","element","python","includes","convertible","saveFlow","JSON","stringify","export","replaceAll","_datos","title","content","undefined","fetch","method","mode","body","then","response","json","loadFlow","moreZoom","zoom_in","lessZoom","zoom_out"],"sources":["/Users/juancamiloespinosa/Desktop/truilder-app/src/components/Board/BoardController.vue"],"sourcesContent":["<template>\n    <AdminPanel @close=\"showAdminPanel = false\" v-show=\"showAdminPanel\" :databaseFlows=\"databaseFlows\"/>\n    <CodeVisualizer @close=\"showCode = false\" v-show=\"showCode\" :pythonCode=\"pythonCode\"/>\n    <div class=\"container\">\n        <div class=\"zoom-container\">\n            <button class=\"button zoom\" @click=\"moreZoom\">+</button>\n            <button class=\"button zoom\" @click=\"lessZoom\">-</button>    \n        </div>\n        <div class=\"buttons-container\">\n            <button class=\"button import\" @click=\"loadFlow\">Load Flow</button>\n            <button class=\"button export\" @click=\"saveFlow\">Save</button>\n            <button class=\"button play\" @click=\"play\">Play</button>\n            <input class=\"input-title\" type=\"text\" placeholder=\"title\" v-model=\"flowTitle\"/>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { inject, provide, ref } from 'vue';\nimport CodeVisualizer from './CodeVisualizer.vue'\nimport AdminPanel from './AdminPanel/AdminPanel.vue'\n\nconst editor = inject('editor')\n\nlet pythonCode = ref('');\nconst showCode = ref(false);\nconst showAdminPanel = ref(false);\nconst databaseFlows = ref({'title': 'title', 'id': 1});\n\nconst flowId = ref()\nconst flowTitle = ref(`Flow #${Math.floor(Math.random() * 1000)}`)\n\nprovide('flowId', flowId.value)\nprovide('flowTitle', flowTitle.value)\n\nconst play = () => {\n    const data =  editor.value.drawflow.drawflow.Home.data\n    console.log(data)\n    const keys = Object.keys(data)\n    let nodesOrder = Object.keys(data)\n    .map(function(key) {\n        return data[key];\n    })\n    .sort((a, b) => (a.pos_x > b.pos_x) ? 1 : (b.pos_x > a.pos_x) ? -1 : 0);\n    \n    pythonCode.value = '';\n    nodesOrder.forEach(element => {\n        (element.data['python'] && !element.data.python.includes('undefined') && element.data.convertible) ? pythonCode.value += `${element.data.python}\\n` : {} \n    });\n\n    showCode.value = true;\n    console.log(pythonCode.value)\n}\n\nconst saveFlow = () => {\n    let data = JSON.stringify(editor.value.export());\n    data = data.replaceAll('{', 'openSquare')\n    data = data.replaceAll('}', 'closeSquare')\n    data = data.replaceAll('\"', 'quote')\n    \n    let _datos = {\n        title: flowTitle.value,\n        content: data\n    }\n    \n    if(flowId.value != undefined){\n        fetch(`http://localhost:3000/flows/${flowId.value}`, {\n            method: \"PUT\",\n            mode: 'cors',\n            body: JSON.stringify(_datos)            \n        })\n        .then(response => response.json()) \n        .then(json => {\n            console.log(json)\n        });\n    }else{\n        fetch('http://localhost:3000/flows', {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(_datos)            \n        })\n        .then(response => response.json()) \n        .then(json => {\n            console.log(json)\n        });\n    }\n}\n\nconst loadFlow = () => {\n    fetch('http://localhost:3000/flows', {\n            method: \"GET\",\n            mode: 'cors'            \n        })\n        .then(response => response.json()) \n        .then(json => {\n            databaseFlows.value = json\n        });\n    \n        showAdminPanel.value = true;\n}\n\nconst moreZoom = () => editor.value.zoom_in()\nconst lessZoom = () => editor.value.zoom_out()\n</script>\n\n<style scoped>\nbutton {\n    font-size: 1rem;\n    height: 100%;\n    min-width: 40px;\n    border: none;\n    border-radius: 110px;\n    color: white;\n    font-family: 'Lato', sans-serif;\n    font-weight: 400;\n}\n.container {\n    padding: 8px;\n    width: 100%;\n    height: 10%;\n    border-bottom: 1px solid #8f8f8f;\n    display: grid;\n    grid-template-columns: 2fr 3fr;\n    column-gap: 10px;\n}\n.buttons-container {\n    text-align: right;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 2fr;\n    column-gap: 15px;\n}\n.play {\n    background-color: #52ff00;\n}\n.play:hover {\n    background-color: #42ce02;\n}\n.import {\n    background-color: #ff0000;\n}\n.import:hover {\n    background-color: #cb0000;\n}\n.export {\n    background-color: #4690ff\n}\n.export:hover {\n    background-color: #196deb\n}\n.zoom {\n    background-color: #5f5f5f;\n    margin-right: 10px;\n}\n.input-title {\n    border: 1px black solid;\n}\n</style>"]},"metadata":{},"sourceType":"module"}