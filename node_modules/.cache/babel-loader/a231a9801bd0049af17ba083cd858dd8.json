{"ast":null,"code":"import { watchEffect, ref } from 'vue';\nexport default {\n  __name: 'CodeVisualizer',\n  props: {\n    pythonCode: {\n      type: String,\n      required: true\n    }\n  },\n  emits: [\"close\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n\n    const close = () => emit('close');\n\n    let terminalOutput = ref('Hola');\n    watchEffect(() => {\n      if (props.pythonCode != '') {\n        let _datos = {\n          code: props.pythonCode\n        };\n        fetch('http://localhost:3000/flows/execute', {\n          method: \"POST\",\n          mode: 'cors',\n          body: JSON.stringify(_datos)\n        }).then(response => response.json()).then(json => {\n          console.log(json.response);\n          terminalOutput.value = json.response;\n          console.log(`termina: ${terminalOutput.value}`);\n        });\n      }\n    });\n    const __returned__ = {\n      emit,\n      props,\n      close,\n      terminalOutput,\n      watchEffect,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAgBA,SAAmCA,WAAnC,EAAgDC,GAAhD,QAA2D,KAA3D;;;;;;;;;;;;;;;;;;IAWA,MAAMC,KAAK,GAAG,MAAMC,IAAI,CAAC,OAAD,CAAxB;;IACA,IAAIC,cAAc,GAAGH,GAAG,CAAC,MAAD,CAAxB;IAEAD,WAAW,CAAC,MAAM;MACd,IAAGK,KAAK,CAACC,UAAN,IAAoB,EAAvB,EAA2B;QACvB,IAAIC,MAAM,GAAG;UACTC,IAAI,EAAEH,KAAK,CAACC;QADH,CAAb;QAIAG,KAAK,CAAC,qCAAD,EAAwC;UACzCC,MAAM,EAAE,MADiC;UAEzCC,IAAI,EAAE,MAFmC;UAGzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;QAHmC,CAAxC,CAAL,CAKCQ,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMME,IAAI,IAAI;UACVC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACD,QAAjB;UACAZ,cAAc,CAACgB,KAAf,GAAuBH,IAAI,CAACD,QAA5B;UACAE,OAAO,CAACC,GAAR,CAAa,YAAWf,cAAc,CAACgB,KAAM,EAA7C;QACH,CAVD;MAWH;IACJ,CAlBU,CAAX","names":["watchEffect","ref","close","emit","terminalOutput","props","pythonCode","_datos","code","fetch","method","mode","body","JSON","stringify","then","response","json","console","log","value"],"sources":["/Users/juancamiloespinosa/Desktop/truilder-app/src/components/Board/CodeVisualizer.vue"],"sourcesContent":["<template>\n    <div class=\"global-container\">\n        <img src=\"@/assets/images/close-icon.svg\" @click=\"close\"/>\n        <div class=\"container\">\n            <div class=\"code-window\">\n                <p class=\"code\">{{props.pythonCode}}</p>\n            </div> \n            <div class=\"terminal-window\">\n                <p>Output</p>\n                <p>{{terminalOutput.value}}</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { defineProps, defineEmits, watchEffect, ref } from 'vue';\n\nconst emit = defineEmits([\"close\"])\n\nconst props = defineProps({\n    pythonCode: {\n        type: String,\n        required: true\n    }\n})\n\nconst close = () => emit('close')\nlet terminalOutput = ref('Hola');\n\nwatchEffect(() => {\n    if(props.pythonCode != '' ){\n        let _datos = {\n            code: props.pythonCode,\n        }\n\n        fetch('http://localhost:3000/flows/execute', {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(_datos)            \n        })\n        .then(response => response.json()) \n        .then(json => {\n            console.log(json.response)\n            terminalOutput.value = json.response\n            console.log(`termina: ${terminalOutput.value}`)\n        });\n    }\n})\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap');\n.global-container {\n    width: 100%;\n    height: 100%;\n    padding:25px;\n}\nimg {\n    color: black;\n    margin-bottom: 15px;\n}\n.container {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    width: 100%;\n    height: 90%;\n\n}\n.code-window {\n    background-color: rgb(21, 22, 39); \n    border-radius: 10px 0 0 10px;\n    padding: 20px;\n    color: whitesmoke;\n    line-height:30px;\n}\n.terminal-window {\n    background-color: rgb(28, 29, 46);\n    border-radius: 0 10px 10px 0;\n    padding: 20px;\n    color: whitesmoke;\n    font-family: 'Source Code Pro', monospace;\n}\n.code {\n    white-space: pre-wrap; \n    font-family: 'Source Code Pro', monospace;\n}\n</style>"]},"metadata":{},"sourceType":"module"}