{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    onId: _cache[0] || (_cache[0] = (...args) => _ctx.drawflow && _ctx.drawflow(...args))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAA0B,KAA1B,EAA0B;IAApBC,IAAE,yCAAEC,uCAAF;EAAkB,CAA1B;;EAAA","names":["_createElementBlock","onId","_ctx"],"sourceRoot":"","sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Index.vue"],"sourcesContent":["<template>\n  <div @id=\"drawflow\"></div>\n</template>\n\n<script setup>\nimport Drawflow from 'drawflow'\nimport { onMounted, shallowRef, h, getCurrentInstance, render, defineEmits } from 'vue'\nimport NodeNumber from './Nodes/NodeNumber';\n\nconst editor = shallowRef({});\nconst Vue = { version: 3, h, render };\nconst instance = getCurrentInstance();\n\nconst emit = defineEmits([\"editor\"]);\nconst editorSend = () => emit('editor', editor.value);\n\nonMounted(() => {\n    const id = document.getElementById(\"drawflow\");\n    editor.value = new Drawflow(id, Vue, instance.appContext.app._context);\n    editor.value.start();\n\n    editor.value.registerNode('number', NodeNumber);\n    editor.value.addNode('github', 0, 1, 10, 10, 'github', {}, 'number', 'vue');\n});\n</script>\n\n<style scoped>\n#drawflow {\n  width: 100%;\n  height: 100%;\n  text-align: initial;\n  background-size: 20px 20px;\n  background-image: radial-gradient(#bebebe 1px, transparent 1px);\n}\n</style>"]},"metadata":{},"sourceType":"module"}