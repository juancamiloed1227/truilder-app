{"ast":null,"code":"import { onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeAdd',\n  props: {\n    editor: {\n      type: Object\n    }\n  },\n  emits: [\"addNode\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const values = {\n      'name': 'add',\n      'inputs': 2,\n      'outputs': 1,\n      'node': 'nodeAdd'\n    };\n    let node = ref(null);\n    let id = ref(0);\n    const variableName = ref();\n\n    const addNode = () => emit('addNode', values);\n\n    const updateData = () => {\n      const connections = props.editor.getNodeFromId(id).inputs;\n      const input1 = props.editor.getNodeFromId(parseInt(connections.input_1.connections[0].node), 10).data.output;\n      const input2 = props.editor.getNodeFromId(parseInt(connections.input_2.connections[0].node), 10).data.output;\n      props.editor.updateNodeDataFromId(id, {\n        'js': `var ${variableName.value} = ${input1} + ${input2};`,\n        'output': `${variableName.value}'`\n      });\n    };\n\n    const helloWorld = () => console.log('Hello World');\n\n    onMounted(async () => {\n      await nextTick();\n      id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n      props.editor.updateNodeDataFromId(id, {\n        'updateData': () => helloWorld()\n      });\n    });\n    const __returned__ = {\n      values,\n      props,\n      node,\n      id,\n      variableName,\n      emit,\n      addNode,\n      updateData,\n      helloWorld,\n      onMounted,\n      ref,\n      nextTick,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAWA,SAAmCA,SAAnC,EAA8CC,GAA9C,EAAmDC,QAAnD,QAAmE,KAAnE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAG;MACX,QAAQ,KADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;IAaA,IAAIC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAd;IACA,IAAIK,EAAE,GAAGL,GAAG,CAAC,CAAD,CAAZ;IAEA,MAAMM,YAAY,GAAGN,GAAG,EAAxB;;IAGA,MAAMO,OAAO,GAAG,MAAMC,IAAI,CAAC,SAAD,EAAYL,MAAZ,CAA1B;;IAEA,MAAMM,UAAU,GAAG,MAAM;MACrB,MAAMC,WAAW,GAAGC,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BR,EAA3B,EAA+BS,MAAnD;MAEA,MAAMC,MAAM,GAAGJ,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BG,QAAQ,CAACN,WAAW,CAACO,OAAZ,CAAoBP,WAApB,CAAgC,CAAhC,EAAmCN,IAApC,CAAnC,EAA8E,EAA9E,EAAkFc,IAAlF,CAAuFC,MAAtG;MACA,MAAMC,MAAM,GAAGT,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BG,QAAQ,CAACN,WAAW,CAACW,OAAZ,CAAoBX,WAApB,CAAgC,CAAhC,EAAmCN,IAApC,CAAnC,EAA8E,EAA9E,EAAkFc,IAAlF,CAAuFC,MAAtG;MAEAR,KAAK,CAACC,MAAN,CAAaU,oBAAb,CAAkCjB,EAAlC,EAAsC;QAClC,MAAO,OAAMC,YAAY,CAACiB,KAAM,MAAKR,MAAO,MAAKK,MAAO,GADtB;QAElC,UAAW,GAAEd,YAAY,CAACiB,KAAM;MAFE,CAAtC;IAIH,CAVD;;IAYA,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAzB;;IAEA3B,SAAS,CAAC,YAAY;MAClB,MAAME,QAAQ,EAAd;MACAI,EAAE,GAAGD,IAAI,CAACmB,KAAL,CAAWI,aAAX,CAAyBA,aAAzB,CAAuCA,aAAvC,CAAqDtB,EAArD,CAAwDuB,KAAxD,CAA8D,GAA9D,EAAmE,CAAnE,CAAL;MACAjB,KAAK,CAACC,MAAN,CAAaU,oBAAb,CAAkCjB,EAAlC,EAAsC;QAClC,cAAc,MAAMmB,UAAU;MADI,CAAtC;IAGH,CANQ,CAAT","names":["onMounted","ref","nextTick","NodeTemplate","values","node","id","variableName","addNode","emit","updateData","connections","props","editor","getNodeFromId","inputs","input1","parseInt","input_1","data","output","input2","input_2","updateNodeDataFromId","value","helloWorld","console","log","parentElement","split"],"sources":["/Users/juancamiloespinosa/Desktop/Juan Camilo/platzi/TR/drawflow-test/src/components/Board/Nodes/NodeAdd.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"Add\" firstColor='e07558' secondColor=\"e04c24\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <input class=\"variable-name\" type=\"text\" placeholder=\"Variable name\" v-model=\"variableName\" @change=\"updateData\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'add',\n    'inputs': 2,\n    'outputs': 1,\n    'node': 'nodeAdd'\n}\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst variableName = ref();\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\n\nconst updateData = () => {\n    const connections = props.editor.getNodeFromId(id).inputs\n    \n    const input1 = props.editor.getNodeFromId(parseInt(connections.input_1.connections[0].node), 10).data.output;\n    const input2 = props.editor.getNodeFromId(parseInt(connections.input_2.connections[0].node), 10).data.output;\n\n    props.editor.updateNodeDataFromId(id, {\n        'js': `var ${variableName.value} = ${input1} + ${input2};`,\n        'output': `${variableName.value}'`\n    })\n}\n\nconst helloWorld = () => console.log('Hello World')\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n    props.editor.updateNodeDataFromId(id, { \n        'updateData': () => helloWorld()\n    })\n});\n</script>\n\n<style scoped>\n.variable-name, .number {\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\np {\n    padding-left: 4px;\n    color: white;\n}\n</style>"]},"metadata":{},"sourceType":"module"}