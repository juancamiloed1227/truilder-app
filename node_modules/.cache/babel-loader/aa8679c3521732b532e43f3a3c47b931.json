{"ast":null,"code":"import { onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue';\nexport default {\n  __name: 'NodeFor',\n  props: {\n    editor: {\n      type: Object\n    }\n  },\n  emits: [\"addNode\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const values = {\n      'name': 'for',\n      'inputs': 1,\n      'outputs': 1,\n      'node': 'nodeFor'\n    };\n    let node = ref(null);\n    let id = ref(0);\n\n    const addNode = () => emit('addNode', values);\n\n    let selectedNode = ref(0);\n    const controlVariable = ref();\n\n    const updateData = () => {\n      const node = props.editor.getNodeFromId(id);\n      const obj = { ...node.data\n      };\n      obj['python'] = obj['loop'] ? `for i in range(${controlVariable.value}):\\n  ${obj.loop}` : `for i in range(${controlVariable.value}):`;\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n      props.editor.on('connectionCreated', connection => connectionCreated(connection));\n      props.editor.on('nodeSelected', id => nodeSelected(id));\n      props.editor.on('nodeUnselected', function () {\n        const node_outputs = props.editor.getNodeFromId(id).outputs;\n        const keys = Object.keys(node_outputs);\n\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          node_outputs[key].connections.forEach(connection => {\n            const obj = {\n              'input_class': connection.output,\n              'input_id': connection.node,\n              'output_class': key,\n              'output_id': id\n            };\n            connection.node == selectedNode.value ? connectionCreated(obj) : {};\n          });\n        }\n      });\n    });\n\n    const connectionCreated = connection => {\n      if (connection.output_id == id) {}\n    };\n\n    const nodeSelected = id => selectedNode.value = id;\n\n    const __returned__ = {\n      values,\n      props,\n      node,\n      id,\n      emit,\n      addNode,\n      selectedNode,\n      controlVariable,\n      updateData,\n      connectionCreated,\n      nodeSelected,\n      onMounted,\n      ref,\n      nextTick,\n      NodeTemplate\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAWA,SAAmCA,SAAnC,EAA8CC,GAA9C,EAAmDC,QAAnD,QAAmE,KAAnE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAG;MACX,QAAQ,KADG;MAEX,UAAU,CAFC;MAGX,WAAW,CAHA;MAIX,QAAQ;IAJG,CAAf;IAaA,IAAIC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAd;IACA,IAAIK,EAAE,GAAGL,GAAG,CAAC,CAAD,CAAZ;;IAGA,MAAMM,OAAO,GAAG,MAAMC,IAAI,CAAC,SAAD,EAAYJ,MAAZ,CAA1B;;IACA,IAAIK,YAAY,GAAGR,GAAG,CAAC,CAAD,CAAtB;IAEA,MAAMS,eAAe,GAAGT,GAAG,EAA3B;;IAEA,MAAMU,UAAU,GAAG,MAAM;MACrB,MAAMN,IAAI,GAAGO,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BR,EAA3B,CAAb;MACA,MAAMS,GAAG,GAAG,EAAC,GAAGV,IAAI,CAACW;MAAT,CAAZ;MACAD,GAAG,CAAC,QAAD,CAAH,GAAgBA,GAAG,CAAC,MAAD,CAAH,GAAe,kBAAiBL,eAAe,CAACO,KAAM,SAAQF,GAAG,CAACG,IAAK,EAAvE,GAA4E,kBAAiBR,eAAe,CAACO,KAAM,IAAnI;IAEH,CALD;;IAOAjB,SAAS,CAAC,YAAY;MAClB,MAAME,QAAQ,EAAd;MACAI,EAAE,GAAGD,IAAI,CAACY,KAAL,CAAWE,aAAX,CAAyBA,aAAzB,CAAuCA,aAAvC,CAAqDb,EAArD,CAAwDc,KAAxD,CAA8D,GAA9D,EAAmE,CAAnE,CAAL;MACAR,KAAK,CAACC,MAAN,CAAaQ,EAAb,CAAgB,mBAAhB,EAAqCC,UAAU,IAAIC,iBAAiB,CAACD,UAAD,CAApE;MACAV,KAAK,CAACC,MAAN,CAAaQ,EAAb,CAAgB,cAAhB,EAAgCf,EAAE,IAAIkB,YAAY,CAAClB,EAAD,CAAlD;MACAM,KAAK,CAACC,MAAN,CAAaQ,EAAb,CAAgB,gBAAhB,EAAkC,YAAW;QAEzC,MAAMI,YAAY,GAAGb,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BR,EAA3B,EAA+BoB,OAApD;QACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,YAAZ,CAAb;;QAEA,KAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;UAChC,MAAME,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAhB;UACAJ,YAAY,CAACM,GAAD,CAAZ,CAAkBC,WAAlB,CAA8BC,OAA9B,CAAsCX,UAAU,IAAI;YAChD,MAAMP,GAAG,GAAG;cAAC,eAAeO,UAAU,CAACY,MAA3B;cAAmC,YAAYZ,UAAU,CAACjB,IAA1D;cAAgE,gBAAgB0B,GAAhF;cAAqF,aAAazB;YAAlG,CAAZ;YACAgB,UAAU,CAACjB,IAAX,IAAmBI,YAAY,CAACQ,KAAhC,GAAwCM,iBAAiB,CAACR,GAAD,CAAzD,GAAiE,EAAjE;UACH,CAHD;QAIH;MACJ,CAZD;IAaH,CAlBQ,CAAT;;IAoBA,MAAMQ,iBAAiB,GAAID,UAAD,IAAgB;MAEtC,IAAGA,UAAU,CAACa,SAAX,IAAwB7B,EAA3B,EAA8B,CAE7B;IACJ,CALD;;IAOA,MAAMkB,YAAY,GAAIlB,EAAD,IAAQG,YAAY,CAACQ,KAAb,GAAqBX,EAAlD","names":["onMounted","ref","nextTick","NodeTemplate","values","node","id","addNode","emit","selectedNode","controlVariable","updateData","props","editor","getNodeFromId","obj","data","value","loop","parentElement","split","on","connection","connectionCreated","nodeSelected","node_outputs","outputs","keys","Object","i","length","key","connections","forEach","output","output_id"],"sources":["/Users/juancamiloespinosa/Desktop/truilder/src/components/Board/Nodes/NodeFor.vue"],"sourcesContent":["<template>\n    <NodeTemplate @click=\"addNode\" title=\"For loop\" firstColor='e0d74c' secondColor=\"ffef00\">\n        <template #content>\n            <div ref=\"node\" class=\"node\">\n                <input @change=\"updateData\" v-model=\"controlVariable\" type=\"text\" placeholder=\"Variable or number\"/>\n            </div>\n        </template>\n    </NodeTemplate>\n</template>\n\n<script setup>\nimport { defineEmits, defineProps, onMounted, ref, nextTick } from 'vue';\nimport NodeTemplate from '@/components/Board/Nodes/NodeTemplate.vue'\n\nconst values = {\n    'name': 'for',\n    'inputs': 1,\n    'outputs': 1,\n    'node': 'nodeFor'\n}\n\nconst props = defineProps({\n    editor: {\n        type: Object,\n    }\n})\n\nlet node = ref(null);\nlet id = ref(0);\n\nconst emit = defineEmits([\"addNode\"]);\nconst addNode = () => emit('addNode', values)\nlet selectedNode = ref(0);\n\nconst controlVariable = ref();\n\nconst updateData = () => {\n    const node = props.editor.getNodeFromId(id)\n    const obj = {...node.data}\n    obj['python'] = obj['loop'] ? `for i in range(${controlVariable.value}):\\n  ${obj.loop}` : `for i in range(${controlVariable.value}):`\n    \n}\n\nonMounted(async () => {\n    await nextTick();\n    id = node.value.parentElement.parentElement.parentElement.id.split('-')[1];\n    props.editor.on('connectionCreated', connection => connectionCreated(connection))\n    props.editor.on('nodeSelected', id => nodeSelected(id))\n    props.editor.on('nodeUnselected', function() {\n        \n        const node_outputs = props.editor.getNodeFromId(id).outputs;\n        const keys = Object.keys(node_outputs);\n\n        for(let i = 0; i < keys.length; i++){\n            const key = keys[i]\n            node_outputs[key].connections.forEach(connection => {\n                const obj = {'input_class': connection.output, 'input_id': connection.node, 'output_class': key, 'output_id': id}\n                connection.node == selectedNode.value ? connectionCreated(obj) : {}\n            });\n        }\n    })\n});\n\nconst connectionCreated = (connection) => {\n    \n    if(connection.output_id == id){\n\n    }\n} \n\nconst nodeSelected = (id) => selectedNode.value = id\n</script>\n\n<style scoped>\n.variable-name, .number {\n    margin: 4px 0 4px 0;\n    padding: 4px 6px 4px 6px;\n    border-radius: 5px;\n    border: none;\n}\n.node {\n    box-sizing: border-box;\n}\n.node:hover{\n    cursor: move;\n}\np {\n    padding-left: 4px;\n    color: white;\n}\nbutton {\n    width: 100%;\n    border: none;\n    background: white;\n    padding: 5px 3px 5px 3px;\n    margin-bottom: 5px;\n    border-radius: 10px;\n    color: #222222;\n}\n</style>"]},"metadata":{},"sourceType":"module"}